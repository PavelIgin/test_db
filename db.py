import os
import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
from psycopg2 import Error
from environs import Env


env_file = os.path.join('.env')
env = Env()
env.read_env()


def database_init(cursor):
    try:
        create_database(cursor)
    except Error:
        pass
    try:
        create_table(cursor)
    except:
        pass
    if check_count_strings(cursor)[0] == 0:
        insert_data(cursor)
    return cursor


def get_connection():
    connection = psycopg2.connect(user=env.str('USER_POSTGRES'),
                                  # пароль, который указали при установке PostgreSQL
                                  password=env.str('PASSWORD_POSTGRES'),
                                  host=env.str('HOST_POSTGRES'),
                                  port=env.str('PORT_POSTGRES'))
    connection.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
    return connection


def get_cursor(connection):
    return connection.cursor()

def create_database(cursor):
    sql_create_database = 'CREATE DATABASE bd1'
    cursor.execute(sql_create_database)


def check_count_strings(cursor):
    sql_count_table = 'SELECT COUNT(id) FROM workers;'
    cursor.execute(sql_count_table)
    return cursor.fetchone()


def create_table(cursor):
    sql_insert_table = 'CREATE TABLE workers (' \
                       'id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,' \
                       'name varchar(20) NOT NULL UNIQUE,' \
                       'work varchar(100) NOT NULL UNIQUE,' \
                       'path varchar(100) NOT NULL UNIQUE,' \
                       'priority SMALLINT check(priority >= 1 and priority <= 3) );'
    try:
        cursor.execute(sql_insert_table)
    except Error as error:
        print(error)
        # relation "workers" already exists
        pass


def drop_table(cursor):
    sql_drop_table = 'DROP TABLE workers'
    cursor.execute(sql_drop_table)


def insert_data(cursor):
    sql_insert_table = "INSERT INTO workers VALUES " \
                       "(1,'Петя', 'дворник', 'клининга', 3)," \
                       "(2,'Саша', 'тренер', 'спорта', 2)," \
                       "(3,'Маша', 'продавец', 'продажи', 1)," \
                       "(4,'Глаша', 'ухалтер', 'финансов', 3)," \
                       "(5,'Тимур', 'программист', 'разработки ПО', 1)," \
                       "(6,'Никита', 'охранник', 'безопасности', 2)," \
                       "(7,'Антон', 'маркетолог', 'маркетинга', 3)," \
                       "(8,'Максим', 'геолог', 'недропользования', 3)," \
                       "(9,'Виктор', 'учитель', 'образования', 3)," \
                       "(10,'Иван', 'директор', 'управления', 3)"
    cursor.execute(sql_insert_table)
